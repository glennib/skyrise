#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Skyrise
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db")]
	public partial class dbSkyriseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTelemetry(Telemetry instance);
    partial void UpdateTelemetry(Telemetry instance);
    partial void DeleteTelemetry(Telemetry instance);
    partial void InsertDebugLog(DebugLog instance);
    partial void UpdateDebugLog(DebugLog instance);
    partial void DeleteDebugLog(DebugLog instance);
    #endregion
		
		public dbSkyriseDataContext() : 
				base(global::Skyrise.Properties.Settings.Default.dbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbSkyriseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbSkyriseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbSkyriseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbSkyriseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Telemetry> Telemetries
		{
			get
			{
				return this.GetTable<Telemetry>();
			}
		}
		
		public System.Data.Linq.Table<DebugLog> DebugLogs
		{
			get
			{
				return this.GetTable<DebugLog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Telemetry")]
	public partial class Telemetry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _Timestamp;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<int> _Altitude;
		
		private System.Nullable<int> _Satellites;
		
		private System.Nullable<double> _AccX;
		
		private System.Nullable<double> _AccY;
		
		private System.Nullable<double> _AccZ;
		
		private System.Nullable<int> _Heading;
		
		private System.Nullable<double> _Pressure;
		
		private System.Nullable<double> _TempPressure;
		
		private System.Nullable<double> _Humidity;
		
		private System.Nullable<double> _TempHumidity;
		
		private System.Nullable<double> _Voltage;
		
		private System.Nullable<double> _Spin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimestampChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnAltitudeChanging(System.Nullable<int> value);
    partial void OnAltitudeChanged();
    partial void OnSatellitesChanging(System.Nullable<int> value);
    partial void OnSatellitesChanged();
    partial void OnAccXChanging(System.Nullable<double> value);
    partial void OnAccXChanged();
    partial void OnAccYChanging(System.Nullable<double> value);
    partial void OnAccYChanged();
    partial void OnAccZChanging(System.Nullable<double> value);
    partial void OnAccZChanged();
    partial void OnHeadingChanging(System.Nullable<int> value);
    partial void OnHeadingChanged();
    partial void OnPressureChanging(System.Nullable<double> value);
    partial void OnPressureChanged();
    partial void OnTempPressureChanging(System.Nullable<double> value);
    partial void OnTempPressureChanged();
    partial void OnHumidityChanging(System.Nullable<double> value);
    partial void OnHumidityChanged();
    partial void OnTempHumidityChanging(System.Nullable<double> value);
    partial void OnTempHumidityChanged();
    partial void OnVoltageChanging(System.Nullable<double> value);
    partial void OnVoltageChanged();
    partial void OnSpinChanging(System.Nullable<double> value);
    partial void OnSpinChanged();
    #endregion
		
		public Telemetry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Altitude", DbType="Int")]
		public System.Nullable<int> Altitude
		{
			get
			{
				return this._Altitude;
			}
			set
			{
				if ((this._Altitude != value))
				{
					this.OnAltitudeChanging(value);
					this.SendPropertyChanging();
					this._Altitude = value;
					this.SendPropertyChanged("Altitude");
					this.OnAltitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Satellites", DbType="Int")]
		public System.Nullable<int> Satellites
		{
			get
			{
				return this._Satellites;
			}
			set
			{
				if ((this._Satellites != value))
				{
					this.OnSatellitesChanging(value);
					this.SendPropertyChanging();
					this._Satellites = value;
					this.SendPropertyChanged("Satellites");
					this.OnSatellitesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccX", DbType="Float")]
		public System.Nullable<double> AccX
		{
			get
			{
				return this._AccX;
			}
			set
			{
				if ((this._AccX != value))
				{
					this.OnAccXChanging(value);
					this.SendPropertyChanging();
					this._AccX = value;
					this.SendPropertyChanged("AccX");
					this.OnAccXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccY", DbType="Float")]
		public System.Nullable<double> AccY
		{
			get
			{
				return this._AccY;
			}
			set
			{
				if ((this._AccY != value))
				{
					this.OnAccYChanging(value);
					this.SendPropertyChanging();
					this._AccY = value;
					this.SendPropertyChanged("AccY");
					this.OnAccYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccZ", DbType="Float")]
		public System.Nullable<double> AccZ
		{
			get
			{
				return this._AccZ;
			}
			set
			{
				if ((this._AccZ != value))
				{
					this.OnAccZChanging(value);
					this.SendPropertyChanging();
					this._AccZ = value;
					this.SendPropertyChanged("AccZ");
					this.OnAccZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heading", DbType="Int")]
		public System.Nullable<int> Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pressure", DbType="Float")]
		public System.Nullable<double> Pressure
		{
			get
			{
				return this._Pressure;
			}
			set
			{
				if ((this._Pressure != value))
				{
					this.OnPressureChanging(value);
					this.SendPropertyChanging();
					this._Pressure = value;
					this.SendPropertyChanged("Pressure");
					this.OnPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempPressure", DbType="Float")]
		public System.Nullable<double> TempPressure
		{
			get
			{
				return this._TempPressure;
			}
			set
			{
				if ((this._TempPressure != value))
				{
					this.OnTempPressureChanging(value);
					this.SendPropertyChanging();
					this._TempPressure = value;
					this.SendPropertyChanged("TempPressure");
					this.OnTempPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Humidity", DbType="Float")]
		public System.Nullable<double> Humidity
		{
			get
			{
				return this._Humidity;
			}
			set
			{
				if ((this._Humidity != value))
				{
					this.OnHumidityChanging(value);
					this.SendPropertyChanging();
					this._Humidity = value;
					this.SendPropertyChanged("Humidity");
					this.OnHumidityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempHumidity", DbType="Float")]
		public System.Nullable<double> TempHumidity
		{
			get
			{
				return this._TempHumidity;
			}
			set
			{
				if ((this._TempHumidity != value))
				{
					this.OnTempHumidityChanging(value);
					this.SendPropertyChanging();
					this._TempHumidity = value;
					this.SendPropertyChanged("TempHumidity");
					this.OnTempHumidityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voltage", DbType="Float")]
		public System.Nullable<double> Voltage
		{
			get
			{
				return this._Voltage;
			}
			set
			{
				if ((this._Voltage != value))
				{
					this.OnVoltageChanging(value);
					this.SendPropertyChanging();
					this._Voltage = value;
					this.SendPropertyChanged("Voltage");
					this.OnVoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spin", DbType="Float")]
		public System.Nullable<double> Spin
		{
			get
			{
				return this._Spin;
			}
			set
			{
				if ((this._Spin != value))
				{
					this.OnSpinChanging(value);
					this.SendPropertyChanging();
					this._Spin = value;
					this.SendPropertyChanged("Spin");
					this.OnSpinChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DebugLog")]
	public partial class DebugLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _Timestamp;
		
		private string _Type;
		
		private string _Description;
		
		private string _ErrorMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimestampChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    #endregion
		
		public DebugLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(MAX)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="VarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
